/*
 * NewTilesetFromDirectoryPanel.java
 *
 * Created on September 15, 2008, 8:35 AM
 */
package tileedpro.tileset;

import java.awt.Dialog;
import java.awt.FileDialog;
import java.awt.Frame;
import java.io.File;
import java.io.FilenameFilter;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.jdesktop.application.Action;
import tilelib.util.u;

/**
 *
 * @author  joshua.marinacci@sun.com
 */
public class NewTilesetFromDirectoryPanel extends javax.swing.JPanel {

    /** Creates new form NewTilesetFromDirectoryPanel */
    public NewTilesetFromDirectoryPanel() {
        initComponents();
        setDirectory("not selected");
        setTileWidth(64);
        setTileHeight(64);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        okayButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        tilesetNameTextfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${directory}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(tileedpro.TileEdProApp.class).getContext().getActionMap(NewTilesetFromDirectoryPanel.class, this);
        jButton1.setAction(actionMap.get("chooseDirectory")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jSpinner1.setName("jSpinner1"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${tileWidth}"), jSpinner1, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jSpinner2.setName("jSpinner2"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${tileHeight}"), jSpinner2, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(tileedpro.TileEdProApp.class).getContext().getResourceMap(NewTilesetFromDirectoryPanel.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        okayButton.setAction(actionMap.get("approveDialog")); // NOI18N
        okayButton.setName("okayButton"); // NOI18N

        jButton3.setAction(actionMap.get("cancelDialog")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        tilesetNameTextfield.setName("tilesetNameTextfield"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${tilesetName}"), tilesetNameTextfield, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)))
                        .addGap(314, 314, 314))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okayButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tilesetNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tilesetNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okayButton)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void chooseDirectory() {
        // get the directory
        FileDialog fd = null;
        if(SwingUtilities.windowForComponent(this) instanceof Dialog) {
            fd = new FileDialog((Dialog)SwingUtilities.windowForComponent(this),"Choose Image Directory");
        } else {
            fd = new FileDialog((Frame)SwingUtilities.windowForComponent(this),"Choose Image Directory");
        }
        fd.setFilenameFilter(new FilenameFilter() {
            public boolean accept(File arg0, String arg1) {
                if(arg0.isDirectory()) return true;
                return false;
            }
        });
        fd.setModal(true);
        fd.setMode(FileDialog.LOAD);
        System.setProperty("apple.awt.fileDialogForDirectories", "true");
        fd.setVisible(true);
        System.setProperty("apple.awt.fileDialogForDirectories", "false");
        String file = fd.getFile();
        if(file == null) { return; }
        File targetDirectory = new File(fd.getDirectory(),file);
        u.p("target directory = " + targetDirectory);
        if(!targetDirectory.exists()) {
            JOptionPane.showMessageDialog(this, "Couldn't open directory: " + targetDirectory.getName());
            return;
        }
        
        this.setDirectory(targetDirectory.getAbsolutePath());
        
    }

    

    int tileWidth;
    private int tileHeight;
    private String directory;
    private boolean approved = false;
    private String tilesetName = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField1;
    javax.swing.JButton okayButton;
    private javax.swing.JTextField tilesetNameTextfield;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public int getTileWidth() {
        return tileWidth;
    }

    public void setTileWidth(int tileWidth) {
        int old = getTileWidth();
        this.tileWidth = tileWidth;
        firePropertyChange("tileWidth", old, getTileWidth());
    }

    public int getTileHeight() {
        return tileHeight;
    }

    public void setTileHeight(int tileHeight) {
        int old = getTileHeight();
        this.tileHeight = tileHeight;
        firePropertyChange("tileHeight", old, getTileHeight());
    }

    public String getDirectory() {
        return directory;
    }

    public void setDirectory(String directory) {
        String old = getDirectory();
        this.directory = directory;
        firePropertyChange("directory", old, getDirectory());
    }

    @Action
    public void approveDialog() {
        setApproved(true);
        SwingUtilities.windowForComponent(this).setVisible(false);
    }

    @Action
    public void cancelDialog() {
        setApproved(false);
        SwingUtilities.windowForComponent(this).setVisible(false);
    }

    public boolean isApproved() {
        return approved;
    }

    public void setApproved(boolean approved) {
        boolean old = this.isApproved();
        this.approved = approved;
        firePropertyChange("approved", old, this.isApproved());
    }

    public String getTilesetName() {
        return tilesetName;
    }

    public void setTilesetName(String tilesetName) {
        String old = this.getTilesetName();
        this.tilesetName = tilesetName;
        firePropertyChange("tilesetName", old, getTilesetName());
    }

}
